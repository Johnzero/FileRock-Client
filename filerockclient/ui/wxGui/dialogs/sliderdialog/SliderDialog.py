# -*- coding: ascii -*-
#  ______ _ _      _____            _       _____ _ _            _
# |  ____(_) |    |  __ \          | |     / ____| (_)          | |
# | |__   _| | ___| |__) |___   ___| | __ | |    | |_  ___ _ __ | |_
# |  __| | | |/ _ \  _  // _ \ / __| |/ / | |    | | |/ _ \ '_ \| __|
# | |    | | |  __/ | \ \ (_) | (__|   <  | |____| | |  __/ | | | |_
# |_|    |_|_|\___|_|  \_\___/ \___|_|\_\  \_____|_|_|\___|_| |_|\__|
#
# Copyright (C) 2012 Heyware s.r.l.
#
# This file is part of FileRock Client.
#
# FileRock Client is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# FileRock Client is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with FileRock Client. If not, see <http://www.gnu.org/licenses/>.
#

"""
This is the SliderDialog module.




----

This module is part of the FileRock Client.

Copyright (C) 2012 - Heyware s.r.l.

FileRock Client is licensed under GPLv3 License.

"""

# generated by wxGlade 0.6.3 on Wed Jul 11 19:13:21 2012

import os
import wx
import sys
from Panels import panels

from filerockclient.ui.wxGui import Messages
from filerockclient.ui.wxGui.constants import IMAGE_PATH

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode

# end wxGlade

class SliderDialog(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: SliderDialog.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.panel_1 = wx.Panel(self, -1)
        self.panel_2 = wx.Panel(self.panel_1, -1)
        self.checkbox_1 = wx.CheckBox(self.panel_1, -1, "Show welcome at startup")
        self.checkbox_3 = wx.CheckBox(self.panel_1, -1, "")
        self.back_button = wx.Button(self.panel_1, wx.ID_BACKWARD, "")
        self.skip_button = wx.Button(self.panel_1, wx.ID_OK, "")
        self.forward_button = wx.Button(self.panel_1, wx.ID_FORWARD, "")
        self.go_button = wx.Button(self.panel_1, wx.ID_OK, "")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.OnBack, self.back_button)
#        self.Bind(wx.EVT_BUTTON, self.OnSkip, self.skip_button)
        self.Bind(wx.EVT_BUTTON, self.OnForward, self.forward_button)
        # end wxGlade

        self.checkbox_1.SetLabel(Messages.SLIDER_SHOW_ON_EVERY_STARTUP)
        self.active_panel = 0
        self.skip_button.SetLabel(Messages.SLIDER_DIALOG_SKIP)
        self.forward_button.SetLabel(Messages.SLIDER_DIALOG_NEXT)
        self.back_button.SetLabel(Messages.SLIDER_DIALOG_PREV)
        self.back_button.Disable()

    def __set_properties(self):
        # begin wxGlade: SliderDialog.__set_properties
        self.SetTitle(Messages.SLIDER_DIALOG_TITLE)
        _icon = wx.EmptyIcon()
        pathname = os.path.join(IMAGE_PATH, "other/FileRock.ico")
        _icon.CopyFromBitmap(wx.Bitmap(pathname, wx.BITMAP_TYPE_ICO))
        self.SetIcon(_icon)
        self.panel_2.SetMinSize((600, 400))
        self.checkbox_3.Hide()
        self.forward_button.SetDefault()
        self.go_button.Hide()
        # end wxGlade
        _icon = wx.Icon(pathname, wx.BITMAP_TYPE_ICO)
        self.SetIcon(_icon)

    def __do_layout(self):
        FORCE_WIN = False
        FORCE_OSX = False
        if sys.platform.startswith('win') or FORCE_WIN:
            folder = os.path.join(IMAGE_PATH, "slides")
        elif sys.platform.startswith('darwin') or FORCE_OSX:
            folder = os.path.join(IMAGE_PATH, "slides_osx")
        else:
            folder = os.path.join(IMAGE_PATH, "slides")
        images = map(lambda filename: os.path.join(folder, filename), [
                                                    "FileRock - Intro.001.png",
                                                    "FileRock - Intro.002.png",
                                                    "FileRock - Intro.003.png",
                                                    "FileRock - Intro.004.png",
                                                    "FileRock - Intro.005.png",
                                                    "FileRock - Intro.006.png",
                                                    "FileRock - Intro.007.png",
                                                    "FileRock - Intro.008.png",
                                                    "FileRock - Intro.009.png",
                                                    "FileRock - Intro.010.png",
                                                    "FileRock - Intro.011.png",
                                                    "FileRock - Intro.012.png"])
        maker = panels.PanelMaker(self.panel_2, images)
        self.panels = maker.create_panels()
        sizer_13 = wx.BoxSizer(wx.HORIZONTAL)
        for panel in self.panels:
            sizer_13.Add(panel, 0, wx.EXPAND)
        # begin wxGlade: SliderDialog.__do_layout
        sizer_10 = wx.BoxSizer(wx.VERTICAL)
        sizer_11 = wx.BoxSizer(wx.VERTICAL)
        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_12 = wx.FlexGridSizer(1, 4, 0, 5)
        grid_sizer_1 = wx.FlexGridSizer(1, 3, 0, 5)
#        sizer_13 = wx.BoxSizer(wx.HORIZONTAL)
        self.panel_2.SetSizer(sizer_13)
        sizer_11.Add(self.panel_2, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.checkbox_1, 0, 0, 0)
        grid_sizer_1.Add(self.checkbox_3, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_1.Add((20, 20), 0, 0, 0)
        sizer_1.Add(grid_sizer_1, 1, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_12.Add(self.back_button, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_12.Add(self.skip_button, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_12.Add(self.forward_button, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_12.Add(self.go_button, 0, 0, 0)
        sizer_1.Add(sizer_12, 0, wx.ALIGN_RIGHT, 0)
        sizer_11.Add(sizer_1, 0, wx.ALL|wx.EXPAND, 10)
        self.panel_1.SetSizer(sizer_11)
        sizer_10.Add(self.panel_1, 0, wx.EXPAND, 0)
        self.SetSizer(sizer_10)
        sizer_10.Fit(self)
        self.Layout()
        self.Centre()
        # end wxGlade
        self.sizer_12 = sizer_12


    def Reconfigure(self):
        if self.active_panel==0:
            self.back_button.Disable()
            self.forward_button.Enable()
            self.skip_button.Enable()
        elif self.active_panel==len(self.panels)-1:
            self.forward_button.Hide()
            self.go_button.Show()
            self.skip_button.Disable()
            self.back_button.Enable()
        elif self.active_panel>0 and self.active_panel<len(self.panels)-1:
            self.back_button.Enable()
            self.go_button.Hide()
            self.forward_button.Show()
            self.skip_button.Enable()
#        self.Layout()
        self.sizer_12.Layout()

    def OnBack(self, event): # wxGlade: SliderDialog.<event_handler>
        if self.active_panel > 0:
            self.active_panel-=1
            self.panels[self.active_panel].slideIn()
        self.Reconfigure()

    def OnSkip(self, event): # wxGlade: SliderDialog.<event_handler>
        while self.active_panel < len(self.panels)-1:
            self.panels[self.active_panel].slideOut()
            self.active_panel+=1
        self.Reconfigure()

    def OnForward(self, event): # wxGlade: SliderDialog.<event_handler>
        if self.active_panel < len(self.panels)-1:
            self.panels[self.active_panel].slideOut()
            self.active_panel+=1
        self.Reconfigure()


# end of class SliderDialog


