<?xml version="1.0"?>
<!-- generated by wxGlade 0.6.3 on Fri Nov  9 16:44:21 2012 -->

<application path="." name="" class="MyApp" option="1" language="python" top_window="dialog_1" encoding="UTF-8" use_gettext="1" overwrite="0" use_new_namespace="1" for_version="2.8" is_template="0">
    <object class="ProxyDialog" name="dialog_1" base="EditDialog">
        <extracode>import sys\nfrom filerockclient.ui.gui import Messages\nfrom filerockclient.ui.gui.Utils import _img\nfrom filerockclient.ui.gui.Utils import TASKBARLEFTCLICKACTIONS\nfrom wx.lib.mixins.listctrl import ListCtrlAutoWidthMixin, TextEditMixin\nfrom wx import FilePickerCtrl\nfrom wx.combo import BitmapComboBox\n\nENABLED = True\nDISABLED = False\n\nPROXY_TYPES = ['SOCKS4',\n               'SOCKS5',\n               'HTTP',\n               ]\n\n\n\n\nclass CtrlText(wx.TextCtrl):\n\n    def __init__(self, *args, **kwds):\n        super(CtrlText, self).__init__(*args, **kwds)\n        self.default_value = ""\n        self.Bind(wx.EVT_KEY_UP, self.onKeyUp)\n\n    def onKeyUp(self, evt):\n        if evt.GetKeyCode() == wx.WXK_ESCAPE:\n            self.SetValue(self.default_value)\n\n\nclass DirPickerCtrl(wx.DirPickerCtrl):\n    def __init__(self, *args, **kwds):\n        super(DirPickerCtrl, self).__init__(*args, **kwds)\n        self.default_value = ""\n        self.Bind(wx.EVT_KEY_UP, self.onKeyUp)\n\n    def GetValue(self):\n        return self.GetPath()\n\n    def SetValue(self, value):\n        return self.SetPath(value)\n\n    def onKeyUp(self, evt):\n        if evt.GetKeyCode() == wx.WXK_ESCAPE:\n            self.SetValue(self.default_value)\n\n\nclass CheckBox(wx.CheckBox):\n    def __init__(self, value, *args, **kwds):\n        super(CheckBox, self).__init__(*args, **kwds)\n        self.default_value = ""\n        self.SetValue(value)\n\n    def GetValue(self):\n        if super(CheckBox, self).GetValue():\n            return u"True"\n        else:\n            return u"False"\n\n    def SetValue(self, value):\n        if value == u"True":\n            super(CheckBox, self).SetValue(True)\n        else:\n            super(CheckBox, self).SetValue(False)\n\nclass ReplicaComboBox(wx.ComboBox):\n    def __init__(self, *args, **kwds):\n        super(ReplicaComboBox, self).__init__(*args, **kwds)\n        self.Insert(Messages.CONFIG_NOT_AVAILABLE ,0)\n        self.Disable()\n    \n    def SetValue(self, value):\n        if value is not None:\n            return wx.ComboBox.SetValue(self, value)\n        self.SetSelection(0)\n        return None\n   \nclass ComboBox(wx.ComboBox):\n    def __init__(self, *args, **kwds):\n        super(ComboBox, self).__init__(*args, **kwds)\n        self.default_value = ""\n               \n    def GetValue(self, *args, **kwargs):\n        return super(ComboBox, self).GetValue(*args, **kwargs)\n        \n    def SetValue(self, value):\n        return super(ComboBox, self).SetValue(value)\n\n\nWIDGETS = {\n    'System': {\n        'proxy_type': lambda parent, val: ComboBox(parent,\n                                                   -1,\n                                                   val,\n                                                   choices=PROXY_TYPES,\n                                                   style=wx.CB_READONLY\n                                                   ),\n        'proxy_host': lambda parent, val: CtrlText(parent, -1, val),\n        'proxy_port': lambda parent, val: CtrlText(parent, -1, val),\n        'proxy_rdns': lambda parent, val: CheckBox(val, parent),\n        'proxy_username': lambda parent, val: CtrlText(parent, -1, val),\n        'proxy_password': lambda parent, val: CtrlText(parent, -1, val)\n    }\n}</extracode>
        <style>wxDEFAULT_DIALOG_STYLE|wxMINIMIZE_BOX</style>
        <title>Proxy Settings</title>
        <centered>1</centered>
        <object class="wxBoxSizer" name="sizer_1" base="EditBoxSizer">
            <orient>wxVERTICAL</orient>
            <object class="sizeritem">
                <flag>wxALL|wxEXPAND</flag>
                <border>5</border>
                <option>1</option>
                <object class="wxBoxSizer" name="sizer_2" base="EditBoxSizer">
                    <orient>wxVERTICAL</orient>
                    <object class="sizerslot" />
                    <object class="sizeritem">
                        <flag>wxTOP|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL</flag>
                        <border>5</border>
                        <option>0</option>
                        <object class="wxButton" name="button_ok" base="EditButton">
                            <stockitem>OK</stockitem>
                            <label>&amp;OK</label>
                        </object>
                    </object>
                </object>
            </object>
        </object>
    </object>
</application>
